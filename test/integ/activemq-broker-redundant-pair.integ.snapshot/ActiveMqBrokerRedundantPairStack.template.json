{
 "Resources": {
  "BrokerVpc3A93CA16": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ActiveMqBrokerRedundantPairStack/BrokerVpc"
     }
    ]
   }
  },
  "BrokerVpcPrivateSubnet1SubnetA5340936": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/28",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "ActiveMqBrokerRedundantPairStack/BrokerVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "BrokerVpcPrivateSubnet1RouteTable6A753C97": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ActiveMqBrokerRedundantPairStack/BrokerVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "BrokerVpcPrivateSubnet1RouteTable6A753C97"
    },
    "SubnetId": {
     "Ref": "BrokerVpcPrivateSubnet1SubnetA5340936"
    }
   }
  },
  "BrokerVpcPrivateSubnet2Subnet6E2FB068": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.16/28",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "ActiveMqBrokerRedundantPairStack/BrokerVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "BrokerVpcPrivateSubnet2RouteTable242AB0A2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ActiveMqBrokerRedundantPairStack/BrokerVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "BrokerVpcPrivateSubnet2RouteTable242AB0A2"
    },
    "SubnetId": {
     "Ref": "BrokerVpcPrivateSubnet2Subnet6E2FB068"
    }
   }
  },
  "BrokerVpcSecretsManagerEndpointFFEDBDF2": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "SecretsManagerVPCeSGA686095E",
       "GroupId"
      ]
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".secretsmanager"
      ]
     ]
    },
    "SubnetIds": [
     {
      "Ref": "BrokerVpcPrivateSubnet1SubnetA5340936"
     },
     {
      "Ref": "BrokerVpcPrivateSubnet2Subnet6E2FB068"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "SecretsManagerVPCeSGA686095E": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ActiveMqBrokerRedundantPairStack/SecretsManagerVPCeSG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "BrokerVpc3A93CA16",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "BrokerVpc3A93CA16",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "SecretsManagerVPCeSGfromActiveMqBrokerRedundantPairStackMqttPublisherSG9C9880984435D7CBF2E": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from ActiveMqBrokerRedundantPairStackMqttPublisherSG9C988098:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "SecretsManagerVPCeSGA686095E",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MqttPublisherSGFC0FDEC8",
      "GroupId"
     ]
    },
    "ToPort": 443
   }
  },
  "SecretsManagerVPCeSGfromActiveMqBrokerRedundantPairStackMqttSubscriberSGDDD61D4B4430566D1B7": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from ActiveMqBrokerRedundantPairStackMqttSubscriberSGDDD61D4B:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "SecretsManagerVPCeSGA686095E",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MqttSubscriberSGF523C88E",
      "GroupId"
     ]
    },
    "ToPort": 443
   }
  },
  "BrokerUserC8D843BF": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "password",
     "PasswordLength": 24,
     "SecretStringTemplate": "{\"username\":\"admin\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "BrokerAMQSG2734DF6F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for broker ActiveMqBrokerRedundantPairStackBrokerFDDD2B51",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "BrokerAMQSGfromActiveMqBrokerRedundantPairStackMqttPublisherSG9C988098IndirectPortBFB7F68D": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from ActiveMqBrokerRedundantPairStackMqttPublisherSG9C988098:{IndirectPort}",
    "FromPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "BrokerAMQSG2734DF6F",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MqttPublisherSGFC0FDEC8",
      "GroupId"
     ]
    },
    "ToPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    }
   }
  },
  "BrokerAMQSGfromActiveMqBrokerRedundantPairStackMqttSubscriberSGDDD61D4BIndirectPort309C4E24": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from ActiveMqBrokerRedundantPairStackMqttSubscriberSGDDD61D4B:{IndirectPort}",
    "FromPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "BrokerAMQSG2734DF6F",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MqttSubscriberSGF523C88E",
      "GroupId"
     ]
    },
    "ToPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    }
   }
  },
  "BrokerE1355FD6": {
   "Type": "AWS::AmazonMQ::Broker",
   "Properties": {
    "BrokerName": "ActiveMqBrokerRedundantPairStackBrokerFDDD2B51",
    "DeploymentMode": "ACTIVE_STANDBY_MULTI_AZ",
    "EncryptionOptions": {
     "UseAwsOwnedKey": true
    },
    "EngineType": "ACTIVEMQ",
    "EngineVersion": "5.18",
    "HostInstanceType": "mq.m5.large",
    "PubliclyAccessible": false,
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "BrokerAMQSG2734DF6F",
       "GroupId"
      ]
     }
    ],
    "SubnetIds": [
     {
      "Ref": "BrokerVpcPrivateSubnet1SubnetA5340936"
     },
     {
      "Ref": "BrokerVpcPrivateSubnet2Subnet6E2FB068"
     }
    ],
    "Users": [
     {
      "Password": {
       "Fn::Join": [
        "",
        [
         "{{resolve:secretsmanager:",
         {
          "Ref": "BrokerUserC8D843BF"
         },
         ":SecretString:password::}}"
        ]
       ]
      },
      "Username": {
       "Fn::Join": [
        "",
        [
         "{{resolve:secretsmanager:",
         {
          "Ref": "BrokerUserC8D843BF"
         },
         ":SecretString:username::}}"
        ]
       ]
      }
     }
    ]
   }
  },
  "MqttPublisherSGFC0FDEC8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ActiveMqBrokerRedundantPairStack/MqttPublisherSG",
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "MqttPublisherSGtoActiveMqBrokerRedundantPairStackBrokerAMQSG37B71013IndirectPortED4D6BBA": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "to ActiveMqBrokerRedundantPairStackBrokerAMQSG37B71013:{IndirectPort}",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "BrokerAMQSG2734DF6F",
      "GroupId"
     ]
    },
    "FromPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "MqttPublisherSGFC0FDEC8",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    }
   }
  },
  "MqttPublisherSGtoActiveMqBrokerRedundantPairStackSecretsManagerVPCeSG632236C0443A0BB7E24": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "to ActiveMqBrokerRedundantPairStackSecretsManagerVPCeSG632236C0:443",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "SecretsManagerVPCeSGA686095E",
      "GroupId"
     ]
    },
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "MqttPublisherSGFC0FDEC8",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 443
   }
  },
  "MqttPublisherServiceRole77A3C72E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522"
   ]
  },
  "MqttPublisherServiceRoleDefaultPolicy1350B7F8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "BrokerUserC8D843BF"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MqttPublisherServiceRoleDefaultPolicy1350B7F8",
    "Roles": [
     {
      "Ref": "MqttPublisherServiceRole77A3C72E"
     }
    ]
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522"
   ]
  },
  "MqttPublisher6F739522": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ab334e35fa7e40d639657e198665326ea9220394f2384df5607091b5b045dce2.zip"
    },
    "Environment": {
     "Variables": {
      "MQTT_ENDPOINTS": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           0,
           {
            "Fn::GetAtt": [
             "BrokerE1355FD6",
             "MqttEndpoints"
            ]
           }
          ]
         },
         ",",
         {
          "Fn::Select": [
           1,
           {
            "Fn::GetAtt": [
             "BrokerE1355FD6",
             "MqttEndpoints"
            ]
           }
          ]
         }
        ]
       ]
      },
      "CREDENTIALS": {
       "Ref": "BrokerUserC8D843BF"
      },
      "TOPIC_NAME": "myTopic"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "MqttPublisherServiceRole77A3C72E",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "MqttPublisherSGFC0FDEC8",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "BrokerVpcPrivateSubnet1SubnetA5340936"
      },
      {
       "Ref": "BrokerVpcPrivateSubnet2Subnet6E2FB068"
      }
     ]
    }
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522",
    "MqttPublisherServiceRoleDefaultPolicy1350B7F8",
    "MqttPublisherServiceRole77A3C72E"
   ]
  },
  "MqttPublisherLogRetention71725F0C": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "MqttPublisher6F739522"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522"
   ]
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  },
  "MqttSubscriberSGF523C88E": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ActiveMqBrokerRedundantPairStack/MqttSubscriberSG",
    "VpcId": {
     "Ref": "BrokerVpc3A93CA16"
    }
   }
  },
  "MqttSubscriberSGtoActiveMqBrokerRedundantPairStackBrokerAMQSG37B71013IndirectPort59FB445A": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "to ActiveMqBrokerRedundantPairStackBrokerAMQSG37B71013:{IndirectPort}",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "BrokerAMQSG2734DF6F",
      "GroupId"
     ]
    },
    "FromPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "MqttSubscriberSGF523C88E",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": {
     "Fn::Select": [
      2,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::Select": [
          0,
          {
           "Fn::GetAtt": [
            "BrokerE1355FD6",
            "MqttEndpoints"
           ]
          }
         ]
        }
       ]
      }
     ]
    }
   }
  },
  "MqttSubscriberSGtoActiveMqBrokerRedundantPairStackSecretsManagerVPCeSG632236C0443623AABF4": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "to ActiveMqBrokerRedundantPairStackSecretsManagerVPCeSG632236C0:443",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "SecretsManagerVPCeSGA686095E",
      "GroupId"
     ]
    },
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "MqttSubscriberSGF523C88E",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 443
   }
  },
  "MqttSubscriberServiceRole7426B0E6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522"
   ]
  },
  "MqttSubscriberServiceRoleDefaultPolicy2DDB5E23": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "BrokerUserC8D843BF"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MqttSubscriberServiceRoleDefaultPolicy2DDB5E23",
    "Roles": [
     {
      "Ref": "MqttSubscriberServiceRole7426B0E6"
     }
    ]
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522"
   ]
  },
  "MqttSubscriber470C4F97": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "206b795610d520d549e053f08a64be493bc05abadfcc6fb5874c58f298ec9bd5.zip"
    },
    "Environment": {
     "Variables": {
      "MQTT_ENDPOINTS": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           0,
           {
            "Fn::GetAtt": [
             "BrokerE1355FD6",
             "MqttEndpoints"
            ]
           }
          ]
         },
         ",",
         {
          "Fn::Select": [
           1,
           {
            "Fn::GetAtt": [
             "BrokerE1355FD6",
             "MqttEndpoints"
            ]
           }
          ]
         }
        ]
       ]
      },
      "CREDENTIALS": {
       "Ref": "BrokerUserC8D843BF"
      },
      "TOPIC_NAME": "myTopic"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "MqttSubscriberServiceRole7426B0E6",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "MqttSubscriberSGF523C88E",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "BrokerVpcPrivateSubnet1SubnetA5340936"
      },
      {
       "Ref": "BrokerVpcPrivateSubnet2Subnet6E2FB068"
      }
     ]
    }
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522",
    "MqttSubscriberServiceRoleDefaultPolicy2DDB5E23",
    "MqttSubscriberServiceRole7426B0E6"
   ]
  },
  "MqttSubscriberLogRetentionD8B0FF2B": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "MqttSubscriber470C4F97"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "DependsOn": [
    "BrokerVpcPrivateSubnet1RouteTableAssociationE30FB4E6",
    "BrokerVpcPrivateSubnet2RouteTableAssociationD4B0A522"
   ]
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs18.x"
   },
   "us-gov-west-1": {
    "value": "nodejs18.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "ActiveConsole": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "BrokerE1355FD6"
      },
      "-1.mq.",
      {
       "Ref": "AWS::Region"
      },
      ".amazonaws.com:8162"
     ]
    ]
   }
  },
  "ActiveStompUrl": {
   "Value": {
    "Fn::Select": [
     0,
     {
      "Fn::GetAtt": [
       "BrokerE1355FD6",
       "StompEndpoints"
      ]
     }
    ]
   }
  },
  "ActiveStompPort": {
   "Value": {
    "Fn::Select": [
     2,
     {
      "Fn::Split": [
       ":",
       {
        "Fn::Select": [
         0,
         {
          "Fn::GetAtt": [
           "BrokerE1355FD6",
           "StompEndpoints"
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  },
  "ActiveIpAddress": {
   "Value": {
    "Fn::Select": [
     0,
     {
      "Fn::GetAtt": [
       "BrokerE1355FD6",
       "IpAddresses"
      ]
     }
    ]
   }
  },
  "StandbyConsole": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "BrokerE1355FD6"
      },
      "-2.mq.",
      {
       "Ref": "AWS::Region"
      },
      ".amazonaws.com:8162"
     ]
    ]
   }
  },
  "StandbyStompUrl": {
   "Value": {
    "Fn::Select": [
     1,
     {
      "Fn::GetAtt": [
       "BrokerE1355FD6",
       "StompEndpoints"
      ]
     }
    ]
   }
  },
  "StandbyStompPort": {
   "Value": {
    "Fn::Select": [
     2,
     {
      "Fn::Split": [
       ":",
       {
        "Fn::Select": [
         1,
         {
          "Fn::GetAtt": [
           "BrokerE1355FD6",
           "StompEndpoints"
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  },
  "StandbyIpAddress": {
   "Value": {
    "Fn::Select": [
     1,
     {
      "Fn::GetAtt": [
       "BrokerE1355FD6",
       "IpAddresses"
      ]
     }
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}