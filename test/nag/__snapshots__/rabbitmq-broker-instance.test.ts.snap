// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RabbitMqBrokerInstance Best Practices RabbitMQ Private Single Instance Broker Deployment with custom permissions satisfies CDK NAG AwsSolutionsChecks 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs22.x",
      },
      "ap-east-1": {
        "value": "nodejs22.x",
      },
      "ap-east-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-1": {
        "value": "nodejs22.x",
      },
      "ap-northeast-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-3": {
        "value": "nodejs22.x",
      },
      "ap-south-1": {
        "value": "nodejs22.x",
      },
      "ap-south-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-1": {
        "value": "nodejs22.x",
      },
      "ap-southeast-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-3": {
        "value": "nodejs22.x",
      },
      "ap-southeast-4": {
        "value": "nodejs22.x",
      },
      "ap-southeast-5": {
        "value": "nodejs22.x",
      },
      "ap-southeast-6": {
        "value": "nodejs22.x",
      },
      "ap-southeast-7": {
        "value": "nodejs22.x",
      },
      "ca-central-1": {
        "value": "nodejs22.x",
      },
      "ca-west-1": {
        "value": "nodejs22.x",
      },
      "cn-north-1": {
        "value": "nodejs22.x",
      },
      "cn-northwest-1": {
        "value": "nodejs22.x",
      },
      "eu-central-1": {
        "value": "nodejs22.x",
      },
      "eu-central-2": {
        "value": "nodejs22.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs22.x",
      },
      "eu-north-1": {
        "value": "nodejs22.x",
      },
      "eu-south-1": {
        "value": "nodejs22.x",
      },
      "eu-south-2": {
        "value": "nodejs22.x",
      },
      "eu-west-1": {
        "value": "nodejs22.x",
      },
      "eu-west-2": {
        "value": "nodejs22.x",
      },
      "eu-west-3": {
        "value": "nodejs22.x",
      },
      "eusc-de-east-1": {
        "value": "nodejs22.x",
      },
      "il-central-1": {
        "value": "nodejs22.x",
      },
      "me-central-1": {
        "value": "nodejs22.x",
      },
      "me-south-1": {
        "value": "nodejs22.x",
      },
      "mx-central-1": {
        "value": "nodejs22.x",
      },
      "sa-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-2": {
        "value": "nodejs22.x",
      },
      "us-gov-east-1": {
        "value": "nodejs22.x",
      },
      "us-gov-west-1": {
        "value": "nodejs22.x",
      },
      "us-iso-east-1": {
        "value": "nodejs22.x",
      },
      "us-iso-west-1": {
        "value": "nodejs22.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-isof-east-1": {
        "value": "nodejs22.x",
      },
      "us-isof-south-1": {
        "value": "nodejs22.x",
      },
      "us-west-1": {
        "value": "nodejs22.x",
      },
      "us-west-2": {
        "value": "nodejs22.x",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "BrokerCreds13028F98": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Not a focus of the test.",
            },
          ],
        },
      },
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "PasswordLength": 24,
          "SecretStringTemplate": "{"username":"admin"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TestBrokerBD4D5330": {
      "Properties": {
        "AutoMinorVersionUpgrade": false,
        "BrokerName": "TestBroker",
        "DeploymentMode": "SINGLE_INSTANCE",
        "EncryptionOptions": {
          "UseAwsOwnedKey": true,
        },
        "EngineType": "RABBITMQ",
        "EngineVersion": "3.13",
        "HostInstanceType": "mq.m5.large",
        "PubliclyAccessible": false,
        "Users": [
          {
            "Password": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "BrokerCreds13028F98",
                  },
                  ":SecretString:password::}}",
                ],
              ],
            },
            "Username": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "BrokerCreds13028F98",
                  },
                  ":SecretString:username::}}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AmazonMQ::Broker",
    },
    "fn5FF616E3": {
      "DependsOn": [
        "fnRole4CCF776E",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => { console.log(JSON.stringify(event, null, 2)); };",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "fnRole4CCF776E",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "fnMqEventSourceTestBrokermyQueueC9F09DAD": {
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TestBrokerBD4D5330",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "fn5FF616E3",
        },
        "Queues": [
          "myQueue",
        ],
        "SourceAccessConfigurations": [
          {
            "Type": "BASIC_AUTH",
            "URI": {
              "Ref": "BrokerCreds13028F98",
            },
          },
        ],
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterCRfnMqEventSourceTestBrokermyQueue9CD0AC002532511A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "fnRole4CCF776E",
      ],
      "Properties": {
        "AccountId": {
          "Ref": "AWS::AccountId",
        },
        "EsmId": {
          "Ref": "fnMqEventSourceTestBrokermyQueueC9F09DAD",
        },
        "MqType": "armq",
        "ServiceToken": {
          "Fn::GetAtt": [
            "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEvent3E21BE0F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisComplete5D5CB33A": {
      "DependsOn": [
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisCompleteServiceRoleDefaultPolicy3E7CBE5F",
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisCompleteServiceRoleC3B75526",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "CdkNagValidationFailure",
              "reason": "We use primite functions for ids",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (Default/fn/MqEventSource:TestBrokermyQueue/MqEsmDeleter:fnMqEventSourceTestBrokermyQueue9CD0AC00)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "LoggingConfig": {
          "ApplicationLogLevel": "FATAL",
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisCompleteServiceRoleC3B75526",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisCompleteServiceRoleC3B75526": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisCompleteServiceRoleDefaultPolicy3E7CBE5F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                  "Arn",
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ntSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisCompleteServiceRoleDefaultPolicy3E7CBE5F",
        "Roles": [
          {
            "Ref": "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisCompleteServiceRoleC3B75526",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEvent3E21BE0F": {
      "DependsOn": [
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEventServiceRoleDefaultPolicyE4D1CE61",
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEventServiceRole24538CC0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "CdkNagValidationFailure",
              "reason": "We use primite functions for ids",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Default/fn/MqEventSource:TestBrokermyQueue/MqEsmDeleter:fnMqEventSourceTestBrokermyQueue9CD0AC00)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachine7929ECDC",
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "ApplicationLogLevel": "FATAL",
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEventServiceRole24538CC0",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEventServiceRole24538CC0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEventServiceRoleDefaultPolicyE4D1CE61": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                  "Arn",
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                  "Arn",
                ],
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachine7929ECDC",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEventServiceRoleDefaultPolicyE4D1CE61",
        "Roles": [
          {
            "Ref": "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonEventServiceRole24538CC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeout4CCA28D6": {
      "DependsOn": [
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeoutServiceRoleDefaultPolicyB33E9539",
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeoutServiceRoleC63EC7E1",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "CdkNagValidationFailure",
              "reason": "We use primite functions for ids",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (Default/fn/MqEventSource:TestBrokermyQueue/MqEsmDeleter:fnMqEventSourceTestBrokermyQueue9CD0AC00)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "LoggingConfig": {
          "ApplicationLogLevel": "FATAL",
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeoutServiceRoleC63EC7E1",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeoutServiceRoleC63EC7E1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeoutServiceRoleDefaultPolicyB33E9539": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueonevent1C0F4885",
                  "Arn",
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "entSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeoutServiceRoleDefaultPolicyB33E9539",
        "Roles": [
          {
            "Ref": "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeoutServiceRoleC63EC7E1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachine7929ECDC": {
      "DependsOn": [
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachineRoleDefaultPolicy5CB32EFE",
        "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachineRole91630863",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":60,"MaxAttempts":30,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisComplete5D5CB33A",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeout4CCA28D6",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachineRole91630863",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachineRole91630863": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachineRoleDefaultPolicy5CB32EFE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisComplete5D5CB33A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkisComplete5D5CB33A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeout4CCA28D6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00frameworkonTimeout4CCA28D6",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachineRoleDefaultPolicy5CB32EFE",
        "Roles": [
          {
            "Ref": "fnMqEventSourceTestBrokermyQueueMqEsmDeleterfnMqEventSourceTestBrokermyQueue9CD0AC00waiterstatemachineRole91630863",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "fnMqEventSourceTestBrokermyQueueiscompleteC33E9EA0": {
      "DependsOn": [
        "fnMqEventSourceTestBrokermyQueueiscompleteServiceRoleDefaultPolicyF8FC7953",
        "fnMqEventSourceTestBrokermyQueueiscompleteServiceRoleE646976F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "16af7fe9ee2f9788767782a879d7207ff650acb154318c776b000d71e6a718da.zip",
        },
        "Description": "src/mq-esm/esm-deleter.is-complete.lambda.ts",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "fnMqEventSourceTestBrokermyQueueiscompleteServiceRoleE646976F",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "fnMqEventSourceTestBrokermyQueueiscompleteServiceRoleDefaultPolicyF8FC7953": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeNetworkInterfaces",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "fnMqEventSourceTestBrokermyQueueiscompleteServiceRoleDefaultPolicyF8FC7953",
        "Roles": [
          {
            "Ref": "fnMqEventSourceTestBrokermyQueueiscompleteServiceRoleE646976F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "fnMqEventSourceTestBrokermyQueueiscompleteServiceRoleE646976F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "fnMqEventSourceTestBrokermyQueueonevent1C0F4885": {
      "DependsOn": [
        "fnMqEventSourceTestBrokermyQueueoneventServiceRoleDefaultPolicyDA5F3AED",
        "fnMqEventSourceTestBrokermyQueueoneventServiceRoleA09334EA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f09b6cc320f07d9fd3dc1507063b6b5eab4f55c0e12e319a47e058fa3b3e1f15.zip",
        },
        "Description": "src/mq-esm/esm-deleter.on-event.lambda.ts",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "fnMqEventSourceTestBrokermyQueueoneventServiceRoleA09334EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "fnMqEventSourceTestBrokermyQueueoneventServiceRoleA09334EA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "fnMqEventSourceTestBrokermyQueueoneventServiceRoleDefaultPolicyDA5F3AED": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:DeleteEventSourceMapping",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":lambda:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":event-source-mapping:",
                    {
                      "Ref": "fnMqEventSourceTestBrokermyQueueC9F09DAD",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "fnMqEventSourceTestBrokermyQueueoneventServiceRoleDefaultPolicyDA5F3AED",
        "Roles": [
          {
            "Ref": "fnMqEventSourceTestBrokermyQueueoneventServiceRoleA09334EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "fnRole4CCF776E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWSLambdaBasicExecutionRole added explicitly and intentionally",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
